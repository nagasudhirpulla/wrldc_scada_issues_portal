@model ScadaIssuesPortal.Web.Models.ReportingCaseCreateVM
@using ScadaIssuesPortal.Core.Entities
@{
    ViewData["Title"] = "New Issue";
}

<div class="row justify-content-center align-items-center">
    <div class="col col-md-8 col-lg-8 col-xl-6">
        <h2>@ViewData["Title"]</h2>
        <form method="post">
            <hr />
            <div class="form-group">
                <label asp-for="DownTime" class="question"></label>
                <input asp-for="DownTime" class="form-control datetimepicker" />
                <span asp-validation-for="DownTime" class="text-danger"></span>
            </div>
            <hr />
            @if (Model.CaseItems.Count > 0)
            {
                @for (int caseIter = 0; caseIter < Model.CaseItems.Count; caseIter++)
                {
                    <input asp-for="CaseItems[caseIter].Id" type="hidden" />
                    <input asp-for="CaseItems[caseIter].Question" type="hidden" />
                    <input asp-for="CaseItems[caseIter].SerialNum" type="hidden" />
                    <input asp-for="CaseItems[caseIter].ResponseType" type="hidden" />
                    ResponseType inpType = Model.CaseItems[caseIter].ResponseType;
                    <div class="form-group">
                        <label class="question">@Model.CaseItems[caseIter].Question</label>
                        @if (inpType == ResponseType.ShortText)
                        {
                            <input asp-for="Responses[caseIter]" class="form-control" required="@Model.CaseItems[caseIter].IsResponseRequired" />
                            <input asp-for="ChoiceTexts[caseIter]" type="hidden" />
                        }
                        else if (inpType == ResponseType.LongText)
                        {
                            <textarea asp-for="Responses[caseIter]" class="form-control" required="@Model.CaseItems[caseIter].IsResponseRequired"> </textarea>
                            <input asp-for="ChoiceTexts[caseIter]" type="hidden" />
                        }
                        else if (inpType == ResponseType.DateTime)
                        {
                            <input asp-for="Responses[caseIter]" class="form-control datetimepicker" required="@Model.CaseItems[caseIter].IsResponseRequired" />
                            <input asp-for="ChoiceTexts[caseIter]" type="hidden" />
                        }
                        else if (inpType == ResponseType.Choices)
                        {
                            <select asp-for="Responses[caseIter]" class="form-control" size="@Model.CaseItems[caseIter].Options.Count">
                                @foreach (var opt in Model.CaseItems[caseIter].Options.OrderBy(o => o.SerialNum))
                                {
                                    <option value="@opt.OptionText">@opt.OptionText</option>
                                }
                            </select>
                            <input asp-for="ChoiceTexts[caseIter]" type="hidden" />
                        }
                        else if (inpType == ResponseType.ChoicesWithText)
                        {
                            <select asp-for="Responses[caseIter]" class="form-control" size="@Model.CaseItems[caseIter].Options.Count">
                                @foreach (var opt in Model.CaseItems[caseIter].Options.OrderBy(o => o.SerialNum))
                                {
                                    <option value="@opt.OptionText">@opt.OptionText</option>
                                }
                            </select>
                            <span>Other - </span>
                            <input asp-for="ChoiceTexts[caseIter]" class="form-control" style="display:inline-block;width:20em; font-size:smaller" />
                        }
                        <span asp-validation-for="Responses[caseIter]" class="text-danger"></span>
                    </div>
                    <hr />
                }
                <div class="form-group">
                    <label asp-for="ConcernedAgencyId" class="control-label question"></label>
                    <select multiple class="form-control multi-select" size="6" asp-items="ViewBag.UserId" id="ConcernedAgencyId_Multi" onchange="setMultiSelValue(this)"></select>
                    <input asp-for="ConcernedAgencyId" type="hidden" />
                    <span asp-validation-for="ConcernedAgencyId" class="text-danger"></span>
                </div>
                <hr />
            }
            <button type="submit" class="btn btn-success">Create New Issue</button>
        </form>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="~/lib/vanilla-multiselect/vanillaSelectBox.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        .question {
            font-weight: bold;
            font-size: large;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="~/lib/vanilla-multiselect/vanillaSelectBox.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $(".datetimepicker").flatpickr({
            enableTime: true,
            dateFormat: "Y-m-d H:i",
        });
        var concernedAgencyMultiSelect = new vanillaSelectBox(".multi-select", { "maxHeight": 200, "search": true });
        function setMultiSelValue(selObj) {
            let result = [];
            let collection = document.querySelectorAll("#" + selObj.id + " option");
            collection.forEach(function (x) {
                if (x.selected) {
                    result.push(x.value);
                }
            });
            document.getElementById(selObj.id.slice(0, -6)).value = result;
        }
    </script>
}